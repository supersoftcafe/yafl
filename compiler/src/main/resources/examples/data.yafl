

# Data class defines a constructor, just like a class.
# It also defines 'copy' with all optional parameters to override any field.
data Person(name: String, age: Int, gender: Gender)

# The auto generated copy utilises optional parameters, and is
# implemented as shown below. Note use of unsafe code. Manually
# coded, only the last line could be written in a safe module.
#   sub-note: ?: operator is introduced here, that literally translates to a call to 'orElse'
#             on an Optional. The fact that each parameter is Optional of something is
#             inferred just because the operator is used, and the right side of the operator
#             infers the optional type parameter.
#   sub-note: ?. also exists and literally translates to a call to 'apply' on Optional.
#   sub-note: Nearly every use of copy is likely to be a direct call, and will be optimised
#             to a minimal form.
fun copy(p: Person, name, age, gender)
    return if System.GC.IOwn(p)
        name  .apply(x => p.name   := x)
        age   .apply(x => p.age    := x)
        gender.apply(x => p.gender := x)
        p
    else
        Person(name ?: p.name, age ?: p.age, gender ?: p.gender)

