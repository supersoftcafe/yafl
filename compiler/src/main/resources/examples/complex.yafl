
module Maths<NumberType>

type Complex(r:NumberType, i:NumberType)
    fun operator * (b:Complex) = Complex(r*b.r - i*b.i, r*b.i + i*b.r)
    fun toString(a:Complex) = "Complex($r, $i)"

type Vector2(x:NumberType, y:NumberType)
    fun length = sqrt(x^2 + y^2)
    fun operator + (b:Vector2) = Vector2(x+b.x, y+b.y)
    fun operator - (b:Vector2) = Vector2(x-b.x, y-b.y)

type Point2(x:NumberType, y:NumberType)
    fun operator + (b:Vector2) = Point2(x+b.x, y+b.y)
    fun operator - (b:Vector2) = Point2(x-b.x, y-b.y)
    fun operator - (b:Point2) = Vector2(x-b.x, y-b.y)
