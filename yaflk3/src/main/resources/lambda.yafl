
module System

class String(_size: Int32, _data[_size <= 1024]: Int8)
  fun at(index: Int32): Int8 => _data[index]
  fun size(): Int32 => _size

fun `+`(l: String, r: String): String =>
  String(l.size() + r.size(), (index: Int32) => index < l.size() ? l.at(index) : r.at(index-l.size()))


fun charToString(utf: Int32): String =>
  utf <=     0x7f ? String(1, (i) => Int8(utf)) :
  utf <=    0x7ff ? String(2, (i) => Int8(i==0                                                                           ? ((utf >>  6) & 0x1f) | 0xc0 : (utf & 0x3f) | 0x80)) :
  utf <=   0xffff ? String(3, (i) => Int8(i==0                                      ? ((utf >> 12) & 0x0f) | 0xe0 : i==1 ? ((utf >>  6) & 0x3f) | 0x80 : (utf & 0x3f) | 0x80)) :
  utf <= 0x10ffff ? String(4, (i) => Int8(i==0 ? ((utf >> 18) & 0x07) | 0xf0 : i==1 ? ((utf >> 12) & 0x3f) | 0x80 : i==2 ? ((utf >>  6) & 0x3f) | 0x80 : (utf & 0x3f) | 0x80)) :
                    String(3, (i) => Int8(i==0 ? 0xef : i==1 ? 0xbf : 0xbd))


fun int32ToString(value: Int32): String =>
  value < 0 ? "-" + int32ToString(-value) : ((value > 9 ? int32ToString(value/10) : "") + charToString(48 + value%10))



fun main() => 1
